#!/bin/sh

set -e


# == CONFIGURATION ==

RESTIC=/usr/bin/restic
CONTAINER="/tmp/restic-benching/"
export RESTIC_REPOSITORY="${CONTAINER}repo"
export RESTIC_PASSWORD="1234"
TEST_FROM="${CONTAINER}fromdir"
LOGFILE="timing_$(date "+%Y%m%d_%H%M%S").log"

echo "This will create several repos such that the"
echo "quadratic slowdown can be easily analyzed *afterwards*."
echo ""
echo "Using command '${RESTIC}':"
${RESTIC} version | tee "${LOGFILE}"
echo "Main repo will be in '${RESTIC_REPOSITORY}'."
echo "Password is '${RESTIC_PASSWORD}'."
echo ""

# Fail early is programs are missing
type rm mkdir shuf dd date tee cp tar > /dev/null

# == CLEANUP ==

rm -rf "${CONTAINER}"

# == SETUP: fromdir ==

mkdir -p "${TEST_FROM}"
for i in $(seq 3)
do
    DSTFILE="$(mktemp "${TEST_FROM}"/important_file_XXXXXXX.txt)"
    shuf -n3 <<EOF > "${DSTFILE}"
Hello, World!
foobar
Not something very interesting.
Hello!
Yes, hello?
Who is there?
Surely, you can't be serious!
I am serious.
And stop calling me Shirly!
This is a self-descriptive line.
Lorem ipsum
Dolor sit something something.
The quick brown fox.
Jumped over by the lazy dogs.
This sentence is an anagram for itself.
EOF
done

# == SETUP: destdir ==

export RESTIC_PASSWORD="1234"
${RESTIC} init

# == EXECUTE: a ==

echo "Iteration 1 / 2000"
date | tee "${TEST_FROM}/date.txt"
${RESTIC} backup "${TEST_FROM}" > /dev/null
#/usr/bin/time restic check
cp -a "${RESTIC_REPOSITORY}" "${CONTAINER}a"
echo "Mirror at time r=1 at path: ${CONTAINER}a"

# == EXECUTE: b ==

for i in $(seq 2 500)
do
    echo "Iteration $i / 2000"
    date | tee "${TEST_FROM}/date.txt"
    ${RESTIC} backup "${TEST_FROM}" > /dev/null
    #/usr/bin/time restic check
done 2>&1 | tee -a "${LOGFILE}"
cp -a "${RESTIC_REPOSITORY}" "${CONTAINER}b"
echo "Mirror at time r=500 at path: ${CONTAINER}b"

# == EXECUTE: c ==

for i in $(seq 501 1000)
do
    echo "Iteration $i / 2000"
    date | tee "${TEST_FROM}/date.txt"
    ${RESTIC} backup "${TEST_FROM}" > /dev/null
    #/usr/bin/time restic check
done 2>&1 | tee -a "${LOGFILE}"
cp -a "${RESTIC_REPOSITORY}" "${CONTAINER}c"
echo "Mirror at time r=1000 at path: ${CONTAINER}c"

# == EXECUTE: d ==

for i in $(seq 1001 1500)
do
    echo "Iteration $i / 2000"
    date | tee "${TEST_FROM}/date.txt"
    ${RESTIC} backup "${TEST_FROM}" > /dev/null
    #/usr/bin/time restic check
done 2>&1 | tee -a "${LOGFILE}"
cp -a "${RESTIC_REPOSITORY}" "${CONTAINER}d"
echo "Mirror at time r=1500 at path: ${CONTAINER}d"

# == EXECUTE: e ==

for i in $(seq 1501 2000)
do
    echo "Iteration $i / 2000"
    date | tee "${TEST_FROM}/date.txt"
    ${RESTIC} backup "${TEST_FROM}" > /dev/null
    #/usr/bin/time restic check
done 2>&1 | tee -a "${LOGFILE}"
cp -a "${RESTIC_REPOSITORY}" "${CONTAINER}e"
echo "Mirror at time r=2000 at path: ${CONTAINER}e"
echo "Repository generation complete."

# == MAKETAR ==

REPOFILES="$(mktemp "${CONTAINER}"filelist_XXXXXXX.lst)"

cd "$CONTAINER"
find a b c d e -empty -o -type f | sort -k1.3 > "${REPOFILES}"
echo "Saving $(wc -l "${REPOFILES}") files as compressed tar."
echo "This may take a while ..."
tar caf repos.tar.xz --files-from "${REPOFILES}"
rm "${REPOFILES}"

echo ""
echo "Repos are available at: ${CONTAINER}"
echo "Backup available at: $(realpath repos.tar.xz)"
echo "Timing results copied from stdout to: ${LOGFILE}"
